{"version":3,"sources":["component/Person.js","component/Filter.js","component/PersonForm.js","services/contacts.js","App.js","index.js"],"names":["Person","person","onClickDelete","name","number","onClick","Filter","value","onChange","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","url","axios","get","then","response","data","newObject","post","id","delete","statusText","put","App","useState","persons","setPersons","setNewName","setNewNumber","filterContact","setFilterName","errMsg","setErrMsg","showMsg","setMsg","useEffect","contacts","ShowMessage","message","className","ErrorMessage","clearInputFields","setErrorMessage","setTimeout","handleDelete","i","window","confirm","console","log","hasMatch","some","item","find","toLowerCase","getFilteredContact","map","key","e","target","event","preventDefault","personObj","res","concat","catch","err","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a5c9dd9.chunk.js","sourcesContent":["import React from 'react'\nconst Person = ({ person, onClickDelete }) => { \n  return (\n  <li>{person.name} {person.number}<button onClick={onClickDelete}> Delete </button></li>\n  )\n}\n\nexport default Person","import React from 'react'\n\nconst Filter = ({ value, onChange }) => {\n\n  return (\n    <div>\n      filter <input value = {value} onChange={onChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addName, newName, newNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <form onSubmit={addName}>\n    <div>\n      name: <input value ={newName} onChange={handleNameChange} />\n      <div>number: <input value ={newNumber} onChange={handleNumberChange} /></div>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst url = \"http://localhost:3005/api/persons\"\n\nconst FetchAll  = () => {\n    const request = axios.get(url)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(url, newObject)\n    return request.then(response => response.data)\n  }\n\n  const DeleteData = id => {\n    const request = axios.delete(`${url}/${id}`)\n    return request.then(response => response.statusText)\n  }\n\n  const UpdateData = (id, newObject) => {\n    const request = axios.put(`${url}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n  \n  \nexport default {FetchAll, create,DeleteData, UpdateData}","import React, { useState, useEffect } from 'react'\nimport Person from './component/Person'\nimport Filter from './component/Filter'\nimport PersonForm from './component/PersonForm'\nimport contacts from './services/contacts'\nimport './index.css'\nconst App = () => {\n\n  const[persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterContact, setFilterName ] = useState('')\n  const [errMsg, setErrMsg] = useState('')\n  const [showMsg, setMsg] = useState('')\n\n  useEffect(()=>{\n    contacts.FetchAll().then(response => {\n      setPersons(response)\n    })\n  },[persons])\n\n  const ShowMessage = ({message}) => {\n      return (message === '') ? '': <div className=\"showMessage\">{message}</div>\n  }\n  const ErrorMessage = ({message}) => {\n    return (message === '') ? '': <div className=\"errorMessage\">{message}</div>\n}\n  const addName = (event) => {\n    event.preventDefault()\n    const hasMatch = persons.some(item => item.name === newName) ? persons.find(({name}) => name === newName) : false\n    if(!hasMatch) {\n      const personObj = { name:newName, number:newNumber }\n      contacts.create(personObj).then(res => {\n        setPersons(persons.concat(res))\n        setMsg(`${newName} Added`)\n        clearInputFields()\n        setTimeout(() => {\n          setMsg('')\n        }, 2000)\n      }).catch(err => {\n        setErrorMessage(err.response.data.error)\n      })\n\n    } else {\n      const result = window.confirm((`${newName} is already added to phonebook, replace the old number?`))\n      if(result){\n        const personObj = {\n          name: hasMatch.name,\n          number: newNumber}\n        \n        contacts.UpdateData(hasMatch.id, personObj).then(res => {\n          setPersons(persons.concat(res))\n          clearInputFields()\n        }).catch(err=>{\n          setErrorMessage(`Informartion of ${hasMatch.name} has been already removed from server`)\n        })\n      }else{\n        clearInputFields()\n      }\n      \n    }\n  }\n\n  const clearInputFields = () => {\n      setNewName('')\n      setNewNumber('')\n  }\n\n  const setErrorMessage = (message) => {\n    setErrMsg(message)\n        setTimeout(() => {\n          setErrMsg('')\n        }, 2000)\n  }\n\n  const handleNameChange = (e) => {\n    if(e.type === 'change') {\n      setNewName(e.target.value)\n    } \n  }\n\n  const handleNumberChange = (e) => {\n    if(e.type === 'change') {\n      setNewNumber(e.target.value)\n    } \n  }\n  const handleFilter = (e) => {\n    if(e.type === 'change') {\n      setFilterName(e.target.value)\n    } \n  }\n  \n  const handleDelete = (i, name) => {\n    const result = window.confirm(`Delete ${name}`)\n    if(result){\n        contacts.DeleteData(i).then(response => {\n          if(response === 'OK') {\n            console.log('Deleted')\n          }\n         })\n    }\n  }\n\n  const hasMatch = persons.some(item => item = item.name === filterContact) ? persons.find(( {name}) => name.toLowerCase() === filterContact.toLowerCase()) : ''\n  /**\n   * Filtering - Unless it finds the exact match it will show all avilable numbers\n   */\n  const getFilteredContact = hasMatch === '' ? persons.map(person=> <Person key={person.id} person={person} onClickDelete={()=>handleDelete(person.id,person.name)}/> ):<Person person={hasMatch} onClickDelete={()=>handleDelete(hasMatch.id,hasMatch.name)}/>\n  return (\n    <div>\n      <ErrorMessage message={errMsg}/>\n      <ShowMessage message = {showMsg}/>\n      <Filter value = {filterContact} onChange={handleFilter}/>\n      <h2>Phonebook</h2>\n      <PersonForm\n      addName = {addName}\n      newName = {newName}\n      newNumber ={newNumber}\n      handleNameChange = {handleNameChange}\n      handleNumberChange = {handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        {getFilteredContact}\n      </ul>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}